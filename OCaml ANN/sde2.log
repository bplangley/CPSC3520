# let os10=[1.;1.;-1.;-1.;-1.;-1.;-1.;1.;1.;1.];;
val os10 : float list = [1.; 1.; -1.; -1.; -1.; -1.; -1.; 1.; 1.; 1.]
# let os1=[-1.;-1.;-1.;1.;-1.];;
val os1 : float list = [-1.; -1.; -1.; 1.; -1.]
# let os2=[-1.;1.;1.;1.;1.];;
val os2 : float list = [-1.; 1.; 1.; 1.; 1.]
# let w10=hopTrain([os10]);;
val w10 : float list list =
  [[0.; 1.; -1.; -1.; -1.; -1.; -1.; 1.; 1.; 1.];
   [1.; 0.; -1.; -1.; -1.; -1.; -1.; 1.; 1.; 1.];
   [-1.; -1.; 0.; 1.; 1.; 1.; 1.; -1.; -1.; -1.];
   [-1.; -1.; 1.; 0.; 1.; 1.; 1.; -1.; -1.; -1.];
   [-1.; -1.; 1.; 1.; 0.; 1.; 1.; -1.; -1.; -1.];
   [-1.; -1.; 1.; 1.; 1.; 0.; 1.; -1.; -1.; -1.];
   [-1.; -1.; 1.; 1.; 1.; 1.; 0.; -1.; -1.; -1.];
   [1.; 1.; -1.; -1.; -1.; -1.; -1.; 0.; 1.; 1.];
   [1.; 1.; -1.; -1.; -1.; -1.; -1.; 1.; 0.; 1.];
   [1.; 1.; -1.; -1.; -1.; -1.; -1.; 1.; 1.; 0.]]
# let w1=hopTrain([os1;os2]);;
val w1 : float list list =
  [[0.; 0.; 0.; -2.; 0.]; [0.; 0.; 2.; 0.; 2.]; [0.; 2.; 0.; 0.; 2.];
   [-2.; 0.; 0.; 0.; 0.]; [0.; 2.; 2.; 0.; 0.]]
# let w2=hopTrainAstate(os2);;
val w2 : float list list =
  [[0.; -1.; -1.; -1.; -1.]; [-1.; 0.; 1.; 1.; 1.]; [-1.; 1.; 0.; 1.; 1.];
   [-1.; 1.; 1.; 0.; 1.]; [-1.; 1.; 1.; 1.; 0.]]
# let w3=hopTrainAstate(os1);;
val w3 : float list list =
  [[0.; 1.; 1.; -1.; 1.]; [1.; 0.; 1.; -1.; 1.]; [1.; 1.; 0.; -1.; 1.];
   [-1.; -1.; -1.; 0.; -1.]; [1.; 1.; 1.; -1.; 0.]]
# updateN(os1,w3,2);;
- : float list = [-1.; -1.; -1.; 1.; -1.]
# updateN(os10,w10,2);;
- : float list = [1.; 1.; -1.; -1.; -1.; -1.; -1.; 1.; 1.; 1.]
# updateN(os1,w3,5);;
- : float list = [-1.; -1.; -1.; 1.; -1.]
# nextState(os10,w10);;
- : float list = [1.; 1.; -1.; -1.; -1.; -1.; -1.; 1.; 1.; 1.]
# nextState(os1,w2);;
- : float list = [1.; -1.; -1.; -1.; -1.]
# hop11Activation(-100.,1.);;
- : float = -1.
# hop11Activation(0.,1.);;
- : float = 1.
# hop11Activation(40.,1.);;
- : float = 1.
# netAll(os1,w1);;
- : float list = [-2.; -4.; -4.; 2.; -4.]
# netAll(os10,w10);;
- : float list = [9.; 9.; -9.; -9.; -9.; -9.; -9.; 9.; 9.; 9.]
# netAll(os1,w2);;
- : float list = [2.; 0.; 0.; -2.; 0.]
# netUnit(os1,os2);;;
- : float = -1.
# netUnit(os1,[6.;2.;1.;0.;-1.]);;
- : float = -8.